#!/usr/bin/env python3
"""
Script to transform CONN outputs to CSV files according the parcellation scheme.
"""
import scipy.io
import numpy as np
import os



#Code for opening files generated by CONN
for i in range(0,246):
    with open('./Dados/Rest2/list_of_ID_MZ_R1R2') as fp:
        lines = fp.read().split("\n")

    lines=lines[0:len(lines)-1]

    #Carregando o arquivo
    #Loading files
    mat = scipy.io.loadmat('./Dados/Rest2/All_MZ_R2/resultsROI_'+lines[i]+'_R2.mat')
    mat_conn=mat["Z"]
    mat_name_lines=mat["names"]
    mat_name_colunm=mat["names2"]


    #Separando as matrizes de conectividade usando diferentes metodos de parcelamento
    mat_conn_finn=mat_conn[133:401,133:401]
    mat_conn_gordon=mat_conn[401:734,401:734]
    mat_conn_networks=mat_conn[734:766,734:766]

    #Preencher a diagonal das matrizes de conectividade por valor 1 (correlacao de uma ROI com elas mesma)
    np.fill_diagonal(mat_conn_finn,1)
    np.fill_diagonal(mat_conn_gordon,1)
    np.fill_diagonal(mat_conn_networks,1)

    #Criar uma pasta para cada sujeito
    if not os.path.exists("./Dados/Rest2/All_MZ_R2/"+lines[i]):
        os.makedirs("./Dados/Rest2/All_MZ_R2/"+lines[i])

    #Criar um arquivo txt com os valores das matrizes de conectividade de cada sujeito para cada metodo de parcelamento
    np.savetxt("./Dados/Rest2/All_MZ_R2/"+lines[i]+"/mat_conn_finn_r2.csv",mat_conn_finn,delimiter=",")
    np.savetxt("./Dados/Rest2/All_MZ_R2/"+lines[i]+"/mat_conn_gordon_r2.csv",mat_conn_gordon,delimiter=",")
    np.savetxt("./Dados/Rest2/All_MZ_R2/"+lines[i]+"/mat_conn_networks_r2.csv",mat_conn_networks,delimiter=",")

